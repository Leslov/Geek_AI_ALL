DROP DATABASE IF EXISTS vk;
CREATE DATABASE vk;
USE vk;

DROP TABLE IF EXISTS Users;
CREATE TABLE Users(
	ID SERIAL PRIMARY KEY,
	FirstName VARCHAR(150) NOT NULL,
	LastName VARCHAR(150) NOT NULL,
	Phone CHAR(11) NOT NULL,
	Email VARCHAR(255) NOT NULL UNIQUE,
	Password CHAR(65),
	DateCreate DATETIME DEFAULT NOW(),
	DateChange DATETIME DEFAULT NOW() ON UPDATE NOW()
);


DROP TABLE IF EXISTS Profiles;
CREATE TABLE Profiles(
	UserID BIGINT UNSIGNED NOT NULL PRIMARY KEY,
	Gender ENUM('f', 'm', 'x') NOT NULL,
	Birthday Date NOT NULL,
	PhotoId BIGINT UNSIGNED NOT NULL,
	City VARCHAR(130),
	Country VARCHAR(130),
	FOREIGN KEY (UserID) REFERENCES Users (ID)
);


DROP TABLE IF EXISTS Messages;
CREATE TABLE Messages(
	ID SERIAL PRIMARY KEY,
	SenderUserId BIGINT UNSIGNED NOT NULL,
	RecieverUserId BIGINT UNSIGNED NOT NULL,
	Body TEXT,
	DateCreate DATETIME DEFAULT NOW(),
	DateChange DATETIME DEFAULT NOW() ON UPDATE NOW(),
	IsDelivered BOOL DEFAULT FALSE,
	FOREIGN KEY (SenderUserId) REFERENCES Users (ID),
	FOREIGN KEY (RecieverUserId) REFERENCES Users (ID)
);


DROP TABLE IF EXISTS FriendRequests;
CREATE TABLE FriendRequests(
	RequesterUserId BIGINT UNSIGNED NOT NULL,
	RecieverUserId BIGINT UNSIGNED NOT NULL,
	IsAccepted BOOL DEFAULT FALSE,
	DateCreate DATETIME DEFAULT NOW(),
	DateChange DATETIME DEFAULT NOW() ON UPDATE NOW(),
	PRIMARY KEY(RequesterUserId, RecieverUserId),
	FOREIGN KEY (RequesterUserId) REFERENCES Users (ID),
	FOREIGN KEY (RecieverUserId) REFERENCES Users (ID)
);

DROP TABLE IF EXISTS Communities;
CREATE TABLE Communities(
	ID SERIAL PRIMARY KEY,
	Name VARCHAR(145) NOT NULL,
	Description VARCHAR(145) NOT NULL,
	AdminId BIGINT UNSIGNED NOT NULL,
	DateCreate DATETIME DEFAULT NOW(),
	DateChange DATETIME DEFAULT NOW() ON UPDATE NOW(),
	IsDelivered BOOL DEFAULT FALSE,
	CONSTRAINT fk_Communities_AdminId FOREIGN KEY (AdminId) REFERENCES Users (ID)
);

DROP TABLE IF EXISTS Communities_Users;
CREATE TABLE Communities_Users(
	UserID BIGINT UNSIGNED NOT NULL,
	CommunityId BIGINT UNSIGNED NOT NULL,
	PRIMARY KEY(UserID, CommunityId),
	FOREIGN KEY (UserID) REFERENCES Users (ID),
	FOREIGN KEY (CommunityId) REFERENCES Communities (ID)
);

DROP TABLE IF EXISTS MediaTypes;
CREATE TABLE MediaTypes(
	ID SERIAL PRIMARY KEY,
	Name VARCHAR(45) NOT NULL UNIQUE
);

INSERT INTO MediaTypes VALUES (DEFAULT, 'изображение');
INSERT INTO MediaTypes VALUES (DEFAULT, 'музыка');
INSERT INTO MediaTypes VALUES (DEFAULT, 'документ');

DROP TABLE IF EXISTS Media;
CREATE TABLE Media(
	ID SERIAL PRIMARY KEY,
	UserId BIGINT UNSIGNED NOT NULL,
	MediaTypeId BIGINT UNSIGNED NOT NULL,
	FileName VARCHAR(255),
	FileSize BIGINT UNSIGNED,
	DateCreate DATETIME DEFAULT NOW(),
	DateChange DATETIME DEFAULT NOW() ON UPDATE NOW(),
	FOREIGN KEY (UserID) REFERENCES Users (ID),
	FOREIGN KEY (MediaTypeId) REFERENCES MediaTypes (ID)
);
